using <curl/curl.h> as libcurl

export const u8 OK = (u8) libcurl::CURLE_OK;
export const u8 UNSUPPORTED_PROTOCOL = (u8) libcurl::CURLE_FAILED_INIT;
export const u8 FAILED_INIT = (u8) libcurl::CURLE_UNSUPPORTED_PROTOCOL;
export const u8 URL_MALFORMAT = (u8) libcurl::CURLE_URL_MALFORMAT;
export const u8 NOT_BUILT_IN = (u8) libcurl::CURLE_NOT_BUILT_IN;
export const u8 COULDNT_RESOLVE_PROXY = (u8) libcurl::CURLE_COULDNT_RESOLVE_PROXY;
export const u8 COULDNT_RESOLVE_HOST = (u8) libcurl::CURLE_COULDNT_RESOLVE_HOST;
export const u8 COULDNT_CONNECT = (u8) libcurl::CURLE_COULDNT_CONNECT;
export const u8 WEIRD_SERVER_REPLY = (u8) libcurl::CURLE_WEIRD_SERVER_REPLY;
export const u8 REMOTE_ACCESS_DENIED = (u8) libcurl::CURLE_REMOTE_ACCESS_DENIED;
export const u8 FTP_ACCEPT_FAILED = (u8) libcurl::CURLE_FTP_ACCEPT_FAILED;
export const u8 FTP_WEIRD_PASS_REPLY = (u8) libcurl::CURLE_FTP_WEIRD_PASS_REPLY;
export const u8 FTP_ACCEPT_TIMEOUT = (u8) libcurl::CURLE_FTP_ACCEPT_TIMEOUT;
export const u8 FTP_WEIRD_PASV_REPLY = (u8) libcurl::CURLE_FTP_WEIRD_PASV_REPLY;
export const u8 FTP_WEIRD_227_FORMAT = (u8) libcurl::CURLE_FTP_WEIRD_227_FORMAT;
export const u8 FTP_CANT_GET_HOST = (u8) libcurl::CURLE_FTP_CANT_GET_HOST;
export const u8 HTTP2 = (u8) libcurl::CURLE_HTTP2;
export const u8 FTP_COULDNT_SET_TYPE = (u8) libcurl::CURLE_FTP_COULDNT_SET_TYPE;
export const u8 PARTIAL_FILE = (u8) libcurl::CURLE_PARTIAL_FILE;
export const u8 FTP_COULDNT_RETR_FILE = (u8) libcurl::CURLE_FTP_COULDNT_RETR_FILE;
export const u8 QUOTE_ERROR = (u8) libcurl::CURLE_QUOTE_ERROR;
export const u8 HTTP_RETURNED_ERROR = (u8) libcurl::CURLE_HTTP_RETURNED_ERROR;
export const u8 WRITE_ERROR = (u8) libcurl::CURLE_WRITE_ERROR;
export const u8 UPLOAD_FAILED = (u8) libcurl::CURLE_UPLOAD_FAILED;
export const u8 READ_ERROR = (u8) libcurl::CURLE_READ_ERROR;
export const u8 OUT_OF_MEMORY = (u8) libcurl::CURLE_OUT_OF_MEMORY;
export const u8 OPERATION_TIMEDOUT = (u8) libcurl::CURLE_OPERATION_TIMEDOUT;
export const u8 FTP_PORT_FAILED = (u8) libcurl::CURLE_FTP_PORT_FAILED;
export const u8 FTP_COULDNT_USE_REST = (u8) libcurl::CURLE_FTP_COULDNT_USE_REST;
export const u8 RANGE_ERROR = (u8) libcurl::CURLE_RANGE_ERROR;
export const u8 HTTP_POST_ERROR = (u8) libcurl::CURLE_HTTP_POST_ERROR;
export const u8 SSL_CONNECT_ERROR = (u8) libcurl::CURLE_SSL_CONNECT_ERROR;
export const u8 BAD_DOWNLOAD_RESUME = (u8) libcurl::CURLE_BAD_DOWNLOAD_RESUME;
export const u8 FILE_COULDNT_READ_FILE = (u8) libcurl::CURLE_FILE_COULDNT_READ_FILE;
export const u8 LDAP_CANNOT_BIND = (u8) libcurl::CURLE_LDAP_CANNOT_BIND;
export const u8 LDAP_SEARCH_FAILED = (u8) libcurl::CURLE_LDAP_SEARCH_FAILED;
export const u8 ABORTED_BY_CALLBACK = (u8) libcurl::CURLE_ABORTED_BY_CALLBACK;
export const u8 BAD_FUNCTION_ARGUMENT = (u8) libcurl::CURLE_BAD_FUNCTION_ARGUMENT;
export const u8 INTERFACE_FAILED = (u8) libcurl::CURLE_INTERFACE_FAILED;
export const u8 TOO_MANY_REDIRECTS = (u8) libcurl::CURLE_TOO_MANY_REDIRECTS;
export const u8 UNKNOWN_OPTION = (u8) libcurl::CURLE_UNKNOWN_OPTION;
export const u8 TELNET_OPTION_SYNTAX = (u8) libcurl::CURLE_TELNET_OPTION_SYNTAX;
export const u8 GOT_NOTHING = (u8) libcurl::CURLE_GOT_NOTHING;
export const u8 SSL_ENGINE_NOTFOUND = (u8) libcurl::CURLE_SSL_ENGINE_NOTFOUND;
export const u8 SSL_ENGINE_SETFAILED = (u8) libcurl::CURLE_SSL_ENGINE_SETFAILED;
export const u8 SEND_ERROR = (u8) libcurl::CURLE_SEND_ERROR;
export const u8 RECV_ERROR = (u8) libcurl::CURLE_RECV_ERROR;
export const u8 OBSOLETE57 = (u8) libcurl::CURLE_OBSOLETE57;
export const u8 SSL_CERTPROBLEM = (u8) libcurl::CURLE_SSL_CERTPROBLEM;
export const u8 SSL_CIPHER = (u8) libcurl::CURLE_SSL_CIPHER;
export const u8 PEER_FAILED_VERIFICATION = (u8) libcurl::CURLE_PEER_FAILED_VERIFICATION;
export const u8 BAD_CONTENT_ENCODING = (u8) libcurl::CURLE_BAD_CONTENT_ENCODING;
export const u8 LDAP_INVALID_URL = (u8) libcurl::CURLE_LDAP_INVALID_URL;
export const u8 FILESIZE_EXCEEDED = (u8) libcurl::CURLE_FILESIZE_EXCEEDED;
export const u8 USE_SSL_FAILED = (u8) libcurl::CURLE_USE_SSL_FAILED;
export const u8 SEND_FAIL_REWIND = (u8) libcurl::CURLE_SEND_FAIL_REWIND;
export const u8 SSL_ENGINE_INITFAILED = (u8) libcurl::CURLE_SSL_ENGINE_INITFAILED;
export const u8 LOGIN_DENIED = (u8) libcurl::CURLE_LOGIN_DENIED;
export const u8 TFTP_NOTFOUND = (u8) libcurl::CURLE_TFTP_NOTFOUND;
export const u8 TFTP_PERM = (u8) libcurl::CURLE_TFTP_PERM;
export const u8 REMOTE_DISK_FULL = (u8) libcurl::CURLE_REMOTE_DISK_FULL;
export const u8 TFTP_ILLEGAL = (u8) libcurl::CURLE_TFTP_ILLEGAL;
export const u8 TFTP_UNKNOWNID = (u8) libcurl::CURLE_TFTP_UNKNOWNID;
export const u8 REMOTE_FILE_EXISTS = (u8) libcurl::CURLE_REMOTE_FILE_EXISTS;
export const u8 TFTP_NOSUCHUSER = (u8) libcurl::CURLE_TFTP_NOSUCHUSER;
export const u8 CONV_FAILED = (u8) libcurl::CURLE_CONV_FAILED;
export const u8 CONV_REQD = (u8) libcurl::CURLE_CONV_REQD;
export const u8 SSL_CACERT_BADFILE = (u8) libcurl::CURLE_SSL_CACERT_BADFILE;
export const u8 REMOTE_FILE_NOT_FOUND = (u8) libcurl::CURLE_REMOTE_FILE_NOT_FOUND;
export const u8 SSH = (u8) libcurl::CURLE_SSH;
export const u8 SSL_SHUTDOWN_FAILED = (u8) libcurl::CURLE_SSL_SHUTDOWN_FAILED;
export const u8 AGAIN = (u8) libcurl::CURLE_AGAIN;
export const u8 SSL_CRL_BADFILE = (u8) libcurl::CURLE_SSL_CRL_BADFILE;
export const u8 SSL_ISSUER_ERROR = (u8) libcurl::CURLE_SSL_ISSUER_ERROR;
export const u8 FTP_PRET_FAILED = (u8) libcurl::CURLE_FTP_PRET_FAILED;
export const u8 RTSP_CSEQ_ERROR = (u8) libcurl::CURLE_RTSP_CSEQ_ERROR;
export const u8 RTSP_SESSION_ERROR = (u8) libcurl::CURLE_RTSP_SESSION_ERROR;
export const u8 FTP_BAD_FILE_LIST = (u8) libcurl::CURLE_FTP_BAD_FILE_LIST;
export const u8 CHUNK_FAILED = (u8) libcurl::CURLE_CHUNK_FAILED;
export const u8 NO_CONNECTION_AVAILABLE = (u8) libcurl::CURLE_NO_CONNECTION_AVAILABLE;
export const u8 SSL_PINNEDPUBKEYNOTMATCH = (u8) libcurl::CURLE_SSL_PINNEDPUBKEYNOTMATCH;
export const u8 SSL_INVALIDCERTSTATUS = (u8) libcurl::CURLE_SSL_INVALIDCERTSTATUS;
export const u8 HTTP2_STREAM = (u8) libcurl::CURLE_HTTP2_STREAM;
export const u8 RECURSIVE_API_CALL = (u8) libcurl::CURLE_RECURSIVE_API_CALL;
